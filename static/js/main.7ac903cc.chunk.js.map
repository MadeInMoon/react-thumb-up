{"version":3,"sources":["ThumbUp/ThumbUp.js","ThumbUp/index.js","App.js","serviceWorker.js","index.js"],"names":["ThumbUp","state","animated","expended","onClick","_this","animate","props","setState","setTimeout","expend","this","animateOnMount","_this$state","thumbColor","shirtColor","handColor","rootClass","cx","className","react_default","a","createElement","version","x","y","width","height","viewBox","fillOpacity","thumbFillOpacity","style","enableBackground","fill","d","PureComponent","defaultProps","App","shouldAnimate","animateThumbUpOnce","console","log","href","src","alt","src_ThumbUp","role","aria-label","target","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7ac903cc.chunk.js","sourcesContent":["/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright Â© 2016-2018 Made in Moon, All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n// import withStyles from 'isomorphic-style-loader/lib/withStyles';\nimport cx from 'classnames';\nimport './ThumbUp.scss';\n// import iconThumb from './thumb-up-icon.svg';\n\n\nclass ThumbUp extends PureComponent {\n\n  static defaultProps = {\n    animateOnMount: true,\n    thumbFillOpacity: 1,\n    // thumbColor: '#888888',\n    // shirtColor: 'white',\n    // handColor: 'white',\n  };\n\n  state = {\n    animated: false,\n    expended: false,\n  }\n\n  onClick = () => {\n    this.animate();\n    if (typeof this.props.onClick === 'function') {\n      this.props.onClick();\n    }\n  }\n\n  animate = () => {\n    this.setState({\n      animated: false,\n      expended: false,\n    });\n    setTimeout(() => {\n      this.setState({\n        animated: true,\n        expended: false,\n      });\n    }, 300);\n  }\n\n  expend = () => {\n    this.setState({\n      expended: true,\n      animated: false,\n    });\n  }\n\n  componentDidMount() {\n    this.props.animateOnMount ? this.animate() : this.expend();\n  }\n\n  render() {\n    const { animated, expended } = this.state;\n\n    // If thumbColor is given, it will override both shirt and hand colors\n    const thumbColor = this.props.thumbColor;\n    const shirtColor = thumbColor || this.props.shirtColor;\n    const handColor = thumbColor || this.props.handColor;\n\n    // const animated = this.props.animated ? 'animated' : '';\n\n    // console.log(this.props.animateOnMount);\n\n    const rootClass = cx(\n      'root',\n      this.props.className,\n      {\n        expended,\n        animated,\n      },\n    );\n\n    return (\n      <div\n        className={rootClass}\n        onClick={this.onClick}\n      >\n        <svg\n          className=\"thumb\"\n          version=\"1.1\"\n          x=\"0px\"\n          y=\"0px\"\n          width=\"456.814px\"\n          height=\"456.814px\"\n          viewBox=\"0 0 456.814 456.814\"\n          fillOpacity={this.props.thumbFillOpacity}\n          style={{ enableBackground: 'new 0 0 456.814 456.814' }}\n        >\n          <g>\n            <g>\n              <path\n                fill={handColor}\n                d=\"M441.11,252.677c10.468-11.99,15.704-26.169,15.704-42.54c0-14.846-5.432-27.692-16.259-38.547\n                c-10.849-10.854-23.695-16.278-38.541-16.278h-79.082c0.76-2.664,1.522-4.948,2.282-6.851c0.753-1.903,1.811-3.999,3.138-6.283\n                c1.328-2.285,2.283-3.999,2.852-5.139c3.425-6.468,6.047-11.801,7.857-15.985c1.807-4.192,3.606-9.9,5.42-17.133\n                c1.811-7.229,2.711-14.465,2.711-21.698c0-4.566-0.055-8.281-0.145-11.134c-0.089-2.855-0.574-7.139-1.423-12.85\n                c-0.862-5.708-2.006-10.467-3.43-14.272c-1.43-3.806-3.716-8.092-6.851-12.847c-3.142-4.764-6.947-8.613-11.424-11.565\n                c-4.476-2.95-10.184-5.424-17.131-7.421c-6.954-1.999-14.801-2.998-23.562-2.998c-4.948,0-9.227,1.809-12.847,5.426\n                c-3.806,3.806-7.047,8.564-9.709,14.272c-2.666,5.711-4.523,10.66-5.571,14.849c-1.047,4.187-2.238,9.994-3.565,17.415\n                c-1.719,7.998-2.998,13.752-3.86,17.273c-0.855,3.521-2.525,8.136-4.997,13.845c-2.477,5.713-5.424,10.278-8.851,13.706\n                c-6.28,6.28-15.891,17.701-28.837,34.259c-9.329,12.18-18.94,23.695-28.837,34.545c-9.899,10.852-17.131,16.466-21.698,16.847\n                c-4.755,0.38-8.848,2.331-12.275,5.854c-3.427,3.521-5.14,7.662-5.14,12.419v183.01c0,4.949,1.807,9.182,5.424,12.703\n                c3.615,3.525,7.898,5.38,12.847,5.571c6.661,0.191,21.698,4.374,45.111,12.566c14.654,4.941,26.12,8.706,34.4,11.272\n                c8.278,2.566,19.849,5.328,34.684,8.282c14.849,2.949,28.551,4.428,41.11,4.428h4.855h21.7h10.276\n                c25.321-0.38,44.061-7.806,56.247-22.268c11.036-13.135,15.697-30.361,13.99-51.679c7.422-7.042,12.565-15.984,15.416-26.836\n                c3.231-11.604,3.231-22.74,0-33.397c8.754-11.611,12.847-24.649,12.272-39.115C445.395,268.286,443.971,261.055,441.11,252.677z\"\n              />\n              <path\n                fill={shirtColor}\n                d=\"M100.5,191.864H18.276c-4.952,0-9.235,1.809-12.851,5.426C1.809,200.905,0,205.188,0,210.137v182.732\n                c0,4.942,1.809,9.227,5.426,12.847c3.619,3.611,7.902,5.421,12.851,5.421H100.5c4.948,0,9.229-1.81,12.847-5.421\n                c3.616-3.62,5.424-7.904,5.424-12.847V210.137c0-4.949-1.809-9.231-5.424-12.847C109.73,193.672,105.449,191.864,100.5,191.864z\n                M67.665,369.308c-3.616,3.521-7.898,5.281-12.847,5.281c-5.14,0-9.471-1.76-12.99-5.281c-3.521-3.521-5.281-7.85-5.281-12.99\n                c0-4.948,1.759-9.232,5.281-12.847c3.52-3.617,7.85-5.428,12.99-5.428c4.949,0,9.231,1.811,12.847,5.428\n                c3.617,3.614,5.426,7.898,5.426,12.847C73.091,361.458,71.286,365.786,67.665,369.308z\"\n              />\n            </g>\n          </g>\n        </svg>\n\n        <div className=\"circle-wrap\">\n          <div className=\"circle-lg\" />\n        </div>\n        <div className=\"dots-wrap\">\n          <div className={cx('dot', 'dot--t')} />\n          <div className={cx('dot', 'dot--tr')} />\n          <div className={cx('dot', 'dot--br')} />\n          <div className={cx('dot', 'dot--b')} />\n          <div className={cx('dot', 'dot--bl')} />\n          <div className={cx('dot', 'dot--tl')} />\n        </div>\n      </div>\n    );\n  }\n}\n\nThumbUp.propTypes = {\n  animateOnMount: PropTypes.bool,\n  className: PropTypes.string,\n  thumbColor: PropTypes.string,\n  shirtColor: PropTypes.string,\n  handColor: PropTypes.string,\n  thumbFillOpacity: PropTypes.number,\n  onClick: PropTypes.func,\n};\n\n// ThumbUp.contextTypes = {\n//   appLanguage: React.PropTypes.string,\n// };\n\n// export default withStyles(s)(ThumbUp);\nexport default ThumbUp;\n","import ThumbUp from './ThumbUp';\n\nexport default ThumbUp;\n","import React, { Component } from 'react';\nimport ThumbUp from './ThumbUp';\nimport './App.scss';\n\nclass App extends Component {\n\n  state = {\n    shouldAnimate: true,\n  }\n\n  animateThumbUpOnce = () => {\n    console.log('animateThumbUpOnce');\n    // this.setState({ shouldAnimate: false });\n    // setTimeout(() => {\n    //   this.setState({ shouldAnimate: true });\n    // }, 300);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <a href=\"https://github.com/MadeInMoon/react-thumb-up\">\n          <img\n            className=\"github-fork-me\"\n            src=\"https://s3.amazonaws.com/github/ribbons/forkme_right_white_ffffff.png\"\n            alt=\"Fork me on GitHub\"\n          />\n        </a>\n        <div className=\"top\">\n          <h1>react-thumb-up</h1>\n          <h2>A simple react thumb-up animated component, with customizable props.</h2>\n        </div>\n        <ThumbUp\n          className=\"thumbUp\"\n          // animateOnMount={false}\n          animateOnMount\n          onClick={this.animateThumbUpOnce}\n          shouldAnimate={this.state.shouldAnimate}\n          shirtColor=\"white\"\n          // handColor=\"#e23f3f\"\n          handColor=\"#ef4040\"\n          // thumbColor={this.state.thumbColor}\n          // shirtColor={this.state.shirtColor}\n          // handColor={this.state.handColor}\n          // thumbFillOpacity={this.state.thumbFillOpacity}\n        />\n        <div className=\"bottom\">\n          <h3>\n            Wrapped with <span role=\"img\" aria-label=\"love\">â¤ï¸</span> by\n            <a\n              href=\"https://www.madeinmoon.io\"\n              alt=\"Link to Made in Moon\"\n              target=\"new_blank\"\n            >\n              Made in Moon\n            </a>\n          </h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}