/**
 * React Starter Kit (https://www.reactstarterkit.com/)
 *
 * Copyright Â© 2016-2018 Made in Moon, All rights reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.txt file in the root directory of this source tree.
 */

// @import '../../../styles/variables.scss';

// $--primary: blue;
$--primary: #121223;
$--secondary: red;



// Sizes and distances
// size:        200px;
// size:        125px;
// dot lateral: 80px;


$_size: 200;
$size: $_size + px;

$dotDistance: $_size / 1.6 + px;
// $dotDistance: 125px;
$-dotDistance: -$dotDistance;

$dotDistanceLateral: $_size / 2.5 + px;
// $dotDistanceLateral: 80px;
$-dotDistanceLateral: -$dotDistanceLateral;

$circleBorderWidth: $_size / 2.2222 + px;



// Colors
$blue: #0084FF;
$circleBackground: lighten($--primary, 10%);
$circleBorderColor: darken($--primary, 30%);;
//$dotsColors: #0CFBAB #F3396B #08D3FC #FCDB17 #9b59b6 #34495e;
$dotsColors: lighten($--secondary, 5%) lighten($--secondary, 30%) lighten($--secondary, 5%) lighten($--secondary, 30%) lighten($--secondary, 5%) lighten($--secondary, 30%) ;



@keyframes scale {
  0% {
    transform: scale(0);
  }
  1% {
    transform: scale(0);
  }
  20% {
    transform: scale(0);
  }
  35% {
    transform: scale(1.4);
  }
  40% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.15);
  }
  65% {
    transform: scale(1);
  }
  90% {
    transform: scale(1);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes scaleCircle {
  0% {
    border-width: $circleBorderWidth;
    transform: scale(0);
  }

  15% {
    border-color: lighten($--secondary, 100%);
    border-width: $circleBorderWidth;
  }
  30% {
    border-color: lighten($--secondary, 100%);
    opacity: 1;
  }
  35% {
    border-color: lighten($--secondary, 0%);
  }
  50% {
    border-width: 0;
    transform: scale(1);
    opacity: 0.3;
  }
  100% {
    border-width: 0;
    transform: scale(1);
    opacity: 0;
  }
}


  // svg {
  //   color: white !important;
  //   fill: white !important;
  // }
  //   *  {
  //     color: white !important;
  //     fill: white !important;
  //   }


.root {
  position: relative;
  width: $size;
  height: $size;
  margin: 0 auto;
  // margin-top: 0.5em;
  margin-bottom: 1em;
  display: flex;
  cursor: pointer;
  // Thumb
  .thumb {
    position: relative;
    z-index: 1;     // TODO ?
    display: block; // needed for scale animation
    width: 50%;
    height: 100%;
    margin: auto;
    transform: scale(0);
    cursor: pointer;
    // transition: transform 0.3s !important;
    // font-size: 96px;
  }
  // Circle
  .circle-wrap {
    transform: translate(-50%, -50%);
    position: absolute;
    z-index: 100;
    top: 50%;
    left: 50%;
    pointer-events: none;
    .circle-lg {
      // width: 300px;
      // // width: 180px;
      width: $size;
      height: $size;
      // height: 180px;
      border-radius: 50%;
      border-style: solid;
      // border-color: lighten($blue, 30%);
      border-color: darken($--primary, 30%);
      // background: lighten($--primary, 10%);
      opacity: 0;
      //transform: scale(1);
      // // // animation: scaleCircle 1.5s ease-in-out;
      // // // animation-iteration-count: infinite;
      // // // animation-fill-mode: forwards;
      // // // animation-delay: 2s;
    }
  }
  // Dots
  .dots-wrap {
    // display: none;
    transform: translate(-50%, -50%) rotate(3deg);
    position: absolute;
    top: 50%;
    left: 50%;
    width: 220px;
    height: 220px;
    pointer-events: none;
    .dot {
      width: 10px;
      height: 10px;
      position: absolute;
      border-radius: 50%;
      background: #00CCFF;
      margin: 0 auto;
      top: 105px;
      left: 0;
      right: 0;
      opacity: 0;

      // Loop colors
      @for $dot from 1 through length($dotsColors) {
        &:nth-child(#{length($dotsColors)}n+#{$dot}) {
          background-color: nth($dotsColors, $dot);
        }
      }
    }
  }
}

.root.expended {
  .thumb {
    animation: scale 0s ease-in-out;
    animation-fill-mode: forwards;
  }
}

.root.animated {
  // Thumb
  .thumb {
    // background: red !important;
    animation: scale 1.5s ease-in-out;
    // animation-iteration-count: infinite;
    animation-fill-mode: forwards;
    // animation-delay: 2s;
  }
  // Circle
  .circle-lg {
    animation: scaleCircle 1.5s ease-in-out;
    // animation-iteration-count: infinite;
    animation-fill-mode: forwards;
    // animation-delay: 2s;
  }
  // Dots
  .dot--t {
    animation: slideUp 1.5s ease-in-out;
    // animation-iteration-count: infinite;
    animation-fill-mode: forwards;
    // animation-delay: 2s;
    // @keyframes slideUp {
    //   0% {
    //     transform: translateY(0) scale(1);
    //     opacity: 0;
    //   }
    //   20% {
    //     opacity: 0;
    //   }
    //   50% {
    //     opacity: 1;
    //   }
    //
    //   55% {
    //     transform: translateY($-dotDistance) scale(1);
    //     opacity: 1;
    //   }
    //   100% {
    //     opacity: 0;
    //     transform: translateY($-dotDistance) scale(0);
    //   }
    // }
    @keyframes slideUp {
      0% {
        transform: translateY(0) scale(1);
        opacity: 0;
      }
      20% {
        opacity: 0;
      }
      50% {
        opacity: 1;
      }

      55% {
        transform: translateY($-dotDistance) scale(1);
        opacity: 1;
      }
      100% {
        opacity: 0;
        transform: translateY($-dotDistance) scale(0);
      }
    }

  }
  .dot--tr {
    animation: slideUpRight 1.5s ease-in-out;
    // animation-iteration-count: infinite;
    animation-fill-mode: forwards;
    // animation-delay: 2s;
    @keyframes slideUpRight {
      0% {
        transform: translate(0) scale(1);
        opacity: 0;
      }
      20% {
        opacity: 0;
      }
      50% {
        opacity: 1;
      }

      55% {
        transform: translate($dotDistance, $-dotDistanceLateral) scale(1);
        opacity: 1;
      }
      100% {
        opacity: 0;
        transform: translate($dotDistance, $-dotDistanceLateral) scale(0);
      }
    }
  }
  .dot--br {
    animation: slideDownRight 1.5s ease-in-out;
    // animation-iteration-count: infinite;
    animation-fill-mode: forwards;
    // animation-delay: 2s;
    @keyframes slideDownRight {
      0% {
        transform: translate(0) scale(1);
        opacity: 0;
      }
      20% {
        opacity: 0;
      }
      50% {
        opacity: 1;
      }

      55% {
        transform: translate($dotDistance, $dotDistanceLateral) scale(1);
        opacity: 1;
      }
      100% {
        opacity: 0;
        transform: translate($dotDistance, $dotDistanceLateral) scale(0);
      }
    }
  }
  .dot--b {
    animation: slideDown 1.5s ease-in-out;
    // animation-iteration-count: infinite;
    animation-fill-mode: forwards;
    // animation-delay: 2s;
    @keyframes slideDown {
      0% {
        transform: translateY(0) scale(1);
        opacity: 0;
      }
      20% {
        opacity: 0;
      }
      50% {
        opacity: 1;
      }

      55% {
        transform: translateY($dotDistance) scale(1);
        opacity: 1;
      }
      100% {
        opacity: 0;
        transform: translateY($dotDistance) scale(0);
      }
    }
  }
  .dot--bl {
    animation: slideDownLeft 1.5s ease-in-out;
    // animation-iteration-count: infinite;
    animation-fill-mode: forwards;
    // animation-delay: 2s;
    @keyframes slideDownLeft {
      0% {
        transform: translate(0) scale(1);
        opacity: 0;
      }
      20% {
        opacity: 0;
      }
      50% {
        opacity: 1;
      }

      55% {
        transform: translate($-dotDistance, $dotDistanceLateral) scale(1);
        opacity: 1;
      }
      100% {
        opacity: 0;
        transform: translate($-dotDistance, $dotDistanceLateral) scale(0);
      }
    }
  }
  .dot--tl {
    animation: slideUpLeft 1.5s ease-in-out;
    // animation-iteration-count: infinite;
    animation-fill-mode: forwards;
    // animation-delay: 2s;
    @keyframes slideUpLeft {
      0% {
        transform: translate(0) scale(1);
        opacity: 0;
      }
      20% {
        opacity: 0;
      }
      50% {
        opacity: 1;
      }

      55% {
        transform: translate($-dotDistance, $-dotDistanceLateral) scale(1);
        opacity: 1;
      }
      100% {
        opacity: 0;
        transform: translate($-dotDistance, $-dotDistanceLateral) scale(0);
      }
    }
  }
}
